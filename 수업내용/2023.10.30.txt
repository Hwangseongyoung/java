프로젝트
- mini 쇼핑몰(대분류1개)
- 와디즈(클라우딩)
- 그룹웨어
- ERP(급여관리, 인사관리)
- 다중게시판
- 전자투표

pk, fk  ->  inner join
t1, t2, t2

대분류   소분류   상품등록

부서       직책       사원
dept       pos       emp


** 테이블  생성

use grpdb;

create table dept(
	dept_name varchar(20) not null,
	primary key(dept_name)
);

create table pos(
	pos_name varchar(20) not null,
	dept_name_fk varchar(20) not null,
	primary key(pos_name),
	foreign key(dept_name_fk) references dept(dept_name) ON UPDATE cascade ON DELETE restrict
);

create table emp(
	emp_id int not null auto_increment,
	emp_email varchar(50) not null,
	emp_paswd varchar(20) not null,
	emp_name varchar(20) not null,
	pos_name_fk varchar(20) not null,
	primary key(emp_id),
	foreign key(pos_name_fk) references pos(pos_name) ON UPDATE cascade ON DELETE restrict
);

----------------------------------------------------------------------------------------------------------------------------------------------

** 데이터값 추가

- dept 테이블에 추가
INSERT INTO dept VALUES('인사과');
INSERT INTO dept VALUES('비서실');
INSERT INTO dept VALUES('임원실');

- pos 테이블에 추가
INSERT INTO pos VALUES('대표이사', '임원실');
INSERT INTO pos VALUES('기술이사', '임원실');

INSERT INTO pos VALUES('비서실장', '비서실');

INSERT INTO pos VALUES('인사과장', '인사과');
INSERT INTO pos VALUES('대리', '인사과');
INSERT INTO pos VALUES('사원', '인사과');

- emp 테이블에 추가
INSERT INTO emp VALUES(null, 'mail@mail.com', '1111', '홍길동', '인사과장');
INSERT INTO emp VALUES(null, 'mail2@mail.com', '2222', '이철수', '인사과장');

INSERT INTO emp VALUES(null, 'mail3@mail.com', '3333', '대표', '대표이사');

INSERT INTO emp VALUES(null, 'mail4@mail.com', '0000', '김비서', '비서실장');


** 데이터 출력

임원실(2), 인사과(3), 비서실(1)

- 부서별 직책의 수를 출력하시오.
SELECT dept_name_fk, COUNT(pos_name) FROM pos
GROUP BY dept_name_fk;

- 부서별 직채의 수를 출력하시오.(2개 이상만)
SELECT dept_name_fk, COUNT(pos_name) FROM pos
GROUP BY dept_name_fk
HAVING COUNT(pos_name) >= 2;

인사과장(2), 대표이사(1)
- 직책별 사원의 수를 구하시오.(단, 직책의 내림차순으로 출력하시오.)
SELECT pos_name_fk, COUNT(emp_name) FROM emp
GROUP BY pos_name_fk
ORDER BY pos_name_fk DESC;

t1(dept), t2(pos), t3(emp)

- 부서(dept), 직책순으로 출력하시오.(t1, t2)
 ... t1 INNER JOIN t2 ON t1.컬럼 = t2.컬럼;

SELECT t1.dept_name, t2.pos_name FROM dept t1 
INNER JOIN pos t2 ON t1.dept_name = t2.dept_name_fk;

- 부서(dept), 직책순, 사원명을 출력하시오.(t1, t2, t3)
 ... t1 INNER JOIN t2 ON t1.컬럼 = t2.컬럼
INNER JOIN t3 ON t2.컬럼 = t3.컬럼;

SELECT t1.dept_name, t2.pos_name, t3.emp_name FROM dept t1 
INNER JOIN pos t2 ON t1.dept_name = t2.dept_name_fk
INNER JOIN emp t3 ON t2.pos_name = t3.pos_name_fk;

- 부서명으로 오름차순 정렬 후 최근 1개만 출력하시오.
SELECT t1.dept_name, t2.pos_name, t3.emp_name FROM dept t1 
INNER JOIN pos t2 ON t1.dept_name = t2.dept_name_fk
INNER JOIN emp t3 ON t2.pos_name = t3.pos_name_fk
ORDER BY t1.dept_name ASC
LIMIT 0, 1;

----------------------------------------------------------------------------------------------------------------------------------------------

create, drop, alter

insert, select, update, delete

// 답변형
번호, 제목, 작성자, 작성일, 조회수
create table board(
	b_id int not null auto_increment,
	b_title varchar(255),
	b_writer varchar(10),
	b_date datetime,
	b_visit int,
	b_grp int,
	b_level int,
	b_depth int,
	primary key(b_id)
);


** 추가(insert)  -> INSERT INTO 테이블명 VALUES();
INSERT INTO board(b_title, b_writer, b_date) VALUES('공지사항', '관리자', now());

INSERT INTO board(b_title, b_writer, b_date) VALUES('답변형 게시판', '관리자2', now());

INSERT INTO board(b_title, b_writer, b_date) VALUES('이미지 게시판', '관리자3', now());


** 출력(select)  ->  select * from 테이블명;
1. 전체 게시물 수를 출력하시오.
SELECT COUNT(*) as '게시물 수' FROM board;

2. 전체 게시물을 pk로 내림차순 정렬하시오.
SELECT * FROM board ORDER BY b_id DESC;

3. 게시물 중 가장 오래된 2개를 출력하시오.
SELECT * FROM board ORDER BY b_date ASC LIMIT 0, 2;

4. 게시물 제목이 '공지사항'인 것만 출력하시오.
SELECT * FROM board WHERE b_title = '공지사항';

5. 게시물 제목이 '게시판'이란 글자를 포함하고 있는 값을 출력하시오.
SELECT * FROM board WHERE b_title LIKE '%게시판%';

6. 게시물이 2023년에 등록된 자료만 내림차순으로 출력하시오.
SELECT * FROM board WHERE b_date >= '2023-01-01' and b_date <= '2023-12-31';

** 수정(update)  ->  UPDATE 테이블이름 SET 변경할컬럼명1 = '변경할값1', 변경할컬럼명2 = '변경할값2'... WHERE 조건 = 값;
1. pk가 1번 게시물의 작성자를  '홍길동'으로 수정하시오.
UPDATE board SET b_writer = '홍길동' WHERE b_id = 1;

2. pk가 1번 게시물의 작성자를 '김철수', 등록일을 현재날짜로 수정하시오.
UPDATE board SET b_writer = '김철수', b_date = now() WHERE b_id =1;

3. pk가 1번 게시물의 작성자를 '김철수', 등록일을 현재날짜, 제목을 'QnA 게시판'으로 수정하시오.
UPDATE board SET b_writer = '김철수', b_date = now(), b_title = 'QnA 게시판' WHERE b_id =1;

4. board 테이블의 작성자 이름을 모두 '코리아'로 수정하시오.
UPDATE board SET b_writer = '코리아';


** 삭제(delete)  ->  DELETE FROM 테이블명;
1. 게시판 제목이 '답변형 게시판'인 레코드를 삭제하시오.
DELETE FROM board WHERE b_title = '답변형 게시판'; 

2. 게시판 제목이 '이미지 게시판'이면서 pk가 3인 레코드를 삭제하시오.
DELETE FROM board WHERE b_title = '이미지 게시판' and b_id = 3;

3. 게시판 제목이 'QnA 게시판'이면서 pk가 1인 레코드를 검색하시오.
SELECT * FROM board WHERE b_title = 'QnA 게시판' and b_id = 1;

4. 게시판 내용 전체를 삭제하시오.
DELETE FROM board;

----------------------------------------------------------------------------------------------------------------------------------------------

CREATE View 보안 -> 필요한 컬럼만 보여줄 때
물리테이블X -> 논리적인 테이블(테이블 복사가X)

CREATE TABLE MEMBER -> CREATE TABLE MEMBER2;
번호, 아이디, 이름, 비밀번호, 주소
-> 번호, 주소

CREATE VIEW MEMBER_V -> DROP VIEW MEMBER_V;

번호, 이름, 주소, 주민번호 -> view
CREATE TABLE person(
	id int not null auto_increment,
	name varchar(20),
	addr varchar(20),
	jumin char(14),
	primary key(id)
);

INSERT INTO person VALUES(null, '홍길동', '부산광역시', '001234-567890');

- 논리적 테이블(원본 가져오기)
CREATE VIEW person_v AS SELECT id, addr FROM person;
show tables;

SELECT * FROM person_v;

- 물리적 테이블(원본 복사하기)
CREATE table person2 AS SELECT id, addr FROM person;


drop view person_v;
show tables;