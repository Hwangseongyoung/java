객체에 데이터를 저장하는 방식 : 캡슐화
1. 필드에 직접저장(안쓰는게 좋음)
2. 생성자를 통해서 저장
☆★3. getter, setter를 이용해서☆★

묶음 : 객체 - 타입이 다르고 많은 데이터를 이름 하나로

고정배열[타입] : 개수를 정하고 작업 => 검색 속도가 빠르다
-> 고정배열[Member]
-> 100 : 90

동적배열<타입> : 처음 개수는 정해져 있지만 자동으로 공간을 할당
-> 동적배열<Integer>

List 순서가 있는 배열
- ArrayList, Vector : 0, 1, 2, 3, 4, 5, 6
List a = new ArrayList

Map
- HashMap : 순서가 없는 동적배열 -> userid : "koreait", passwd : "1234"

int i
Member m

[
	{
	    String, int, double
	},
	{
   	    String, int, double
	}
]

{
    String, int, double
}

Object OOP
객체


자바 + DB(Index)


배열(고정배열) 사용법
1. int[] num = null;
   num = int[10];		->  int[] num = new int[10];  // 메모리 생성  **속도가 빠름**
ex) 	1번째 회원정보
	private String userid;
    	private String passwd;
	private int age;

	2번째 회원정보
	private String userid;
    	private String passwd;
	private int age;

	3번째 회원정보
	private String userid;
    	private String passwd;
	private int age;

   Register[] r = new Register[3];


2. int[] num = new int[] {1, 2, 3, 4, 5};
	public int add(int[] num) {
	}
3. int[] num = {1, 2, 3, 4, 5};

ArrEx01.java

-----------------------------------------------------------------------------------------------------------------

ArrEx02.java

ArrayEx03.java

객체 지향 언어
값, 동작으로 이루어지는
변수, 메소드()

합계, 평균 class => Cal.java

같은 파일에서 클래스가 여러개일 때는 public class는 한 번만 존재해야 한다.

-----------------------------------------------------------------------------------------------------------------

UsersEx.java
필드 : 아이디, 비밀번호
생성자
getter, setter

객체는 저장하는 용도, 출력

회원가입 : 1배열 ~ 3배열
필드, 생성자, getter, setter
변수 사용하기 전에 초기화
int num = 0;

객체 사용하기 전에 초기화
Users user = new Users();

-----------------------------------------------------------------------------------------------------------------

객체에 데이터 저장

프로그램이 실행되자마자 회원가입

생성자 : default 생성자
파라미터가 없는 생성자는 없어도 실행

생성자 이름은 같지만
매개변수, 타입이 다를 때 - 생성자 오버로딩

Users user = new Users();  --> 전부다가 초기화는 아님
new Users(); --> 초기화

☆★getter, setter☆★

<코드 복잡해서 UsersEx02.java 생성>

-----------------------------------------------------------------------------------------------------------------

객체 = 덩어리

let items = ["Red", "Green", "Blue"]

UsersEx03.java   ---->  구조분해할당