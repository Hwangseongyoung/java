1. 컴퓨터 언어론
  - 절차지향 : ~~~제어문까지는 ex) C언어

  - 객체지향 : OOP(Object Oriented Programming) ex) C++, Java, C#
      - 객체, 상속
      단점) 초반 설계할 때 어렵다 => 추가, 유지보수 편하다
             보안에 조금 더 이점이있다

☆★2. 프로그래밍은 중복되는 것을X => 유지보수가 편하게 바꾸려는 성격 또는 코드 짧게☆★

----------------------------------------------------------------------------------------------------------

똑같은 코드를 사용하지 않으려고
JAVA_HOME
C:\Program Files\Java\jdk-20

%JAVA_HOME%\bin
실행에 가서(윈도우 키 + r) => cmd
javac
java
javac -version

TOMCAT_HOME

서버       <=>      클라이언트
(호스트)
☆★서버(내가 만든 걸 많은 사람이 사용할 수 있게 해 주는 것)☆★
웹 서버 : 내가 만든 홈페이지를 많은 사람이 사용할 수 있게 해 주는 것 -> apache
  - apache.org : 윈도우, 리눅스, Mac
  - IIS : 일반적으로 윈도우에서만

JSP(스프링)서버 : tomcat.apache.org

게임 서버 : 회사에서 만든 게임을 많은 사람이 사용할 수 있게 해 주는 것

-------------------------------------------------------------------------------------------------------------

컴퓨터는 0, 1숫자만

www.naver.com -> dns 서버 -> 223.130.200.107 -> 네이버 전달

-------------------------------------------------------------------------------------------------------------

자바, html,css,js, 스프링 : 일반

-------------------------------------------------------------------------------------------------------------

1. 메모리(RAM) : Random Access Memory(임시 메모리)
   JVM : Java Virtual Machine(자바 가상 머신) - 정교하게 컨트롤 안됨

2. 데이터 크기
   (1) 숫자 : 256 => -128(음수) 0 +127(양수)
   byte(1byte) < char(1byte) < short(2byte) < int(4byte) < long(8byte) < float(4byte) < double(8byte)

   (2) 논리형
   boolean(1byte)

   (3) 문자열 : 글자
   String

	bit(0, 1)
	1 => 0000 0001

   스택(대부분의 프로그래밍), 힙(객체, 배열, 참조형 타입...)

-------------------------------------------------------------------------------------------------------------

프로젝트 생성 후 -> 클래스 파일 -> 파일이름과 클래스이름이 동일해야함
   - 파일이름의 첫글자는 무조건 대문자
   - 자바의 클래스 이름 규칙 중 키워드로 사용하는 이름 쓰지X

   1) 파일이름은 ByteEx.java
   2) 주석
   3) main 메소드()
   4) 프로그램 작성
   5) 출력

-------------------------------------------------------------------------------------------------------------

1. 문자(숫자) : 작은 따옴표(싱글 쿼터) - 하나의 글자 <=> 여러 글자(문자열) String 큰 따옴표
   
   1) 파일이름 : CharEx.java
   2) main() 생성
   3) 주석 : 생략
   4) 프로그래밍
   5) 출력

2. 정수 / 정수 = int
	IntEx.java
	main();

   실수 / 실수 = double

boolean 출력 true, false

BooleanEx.java

DoubleEx.java