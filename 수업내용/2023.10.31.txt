1. html 반응형 -> 전체 사이트(4)
2. javascript(3)

-----------------------------------------------------------------------------------------------------------------------

DDL
DML
DCL : 보안 -> GRANT(권한 설정), REVOKE(권한 제거)

1. 계정 생성 - root
  (1) 계정 정보 확인 -> mysql 디비 -> user(host, user)
	create database grp;
  (2) 계정 = 데이터베이스 이름은 동일하게 생성(관리자 부여)
	create user grp@'%' identified by '1234';
  (3) 계정 생성 후 생성된 디비에 권한 부여
	grant all on grp.* to grp@'%' with grant option;
	flush privileges;

-----------------------------------------------------------------------------------------------------------------------------

<코리아아이티 아카데미 그룹웨어>
1. html, css, js - Ajax(Spring)

2. Database

- 부서명, 직책명, 사원가입
CREATE TABLE dept(
	dept_code char(3) not null,
	dept_name varchar(20) not null,
	primary key(dept_code)
);

INSERT INTO dept VALUES('100', '인사과');
INSERT INTO dept VALUES('200', '자재과');
INSERT INTO dept VALUES('300', '비서실');
INSERT INTO dept VALUES('900', '임원실');

SELECT COUNT(dept_code) as '부서' FROM dept;
SELECT * FROM dept;
SELECT * FROM dept ORDER BY dept_name ASC;


부장100 대리200 사원300   --->   인사과장 100100
CREATE TABLE pos(
	pos_code char(3) not null,
	pos_name varchar(10) not null,
	dept_code_fk char(3) not null,
	primary key(pos_code),
	foreign key(dept_code_fk) references dept(dept_code) ON UPDATE cascade ON DELETE restrict
);

직책코드 직책명 부서코드
INSERT INTO pos VALUES('101', '인사과장', '100');
INSERT INTO pos VALUES('103', '사원', '100');

INSERT INTO pos VALUES('301', '비서실장', '300');

INSERT INTO pos VALUES('901', '대표이사', '900');
INSERT INTO pos VALUES('902', '기술이사', '900');

SELECT * FROM pos ORDER BY dept_code_fk DESC, pos_name DESC;

* 임원실 검색
SELECT * FROM pos WHERE dept_code_fk = '900';


CREATE TABLE emp(
	emp_id int not null auto_increment,
	emp_email varchar(50) not null,
	emp_passwd varchar(20) not null,
	emp_name varchar(10) not null,
	pos_code_fk char(3) not null,
	primary key(emp_id),
	foreign key(pos_code_fk) references pos(pos_code) ON UPDATE cascade ON DELETE restrict
);

INSERT INTO emp VALUES(null, 'mail@mail.com', '1111', '홍길동', '101');

인사과(2) 비서실(1) 임원실(2)

SELECT dept.dept_name, COUNT(pos.pos_code) FROM dept 
INNER JOIN pos ON dept.dept_code = pos.dept_code_fk
GROUP BY dept.dept_name;

* 인사과 인사부장 홍길동 순으로 출력하시오.
t1 INNER JOIN t2 ON t1.pk = t2.fk
INNER JOIN t3 ON t2.pk = t3.fk;

SELECT A.dept_name, B.pos_name, C.emp_name FROM dept A INNER JOIN pos B ON A.dept_code = B.dept_code_fk
INNER JOIN emp C ON B.pos_code = C.pos_code_fk;

* 사원테이블에서 직책이 '101'이고 사원번호 1번인 사원의 사원명을 '김철수'로 변경하시오.
UPDATE 테이블명 SET 변경 WHERE 조건 = 값;
UPDATE emp SET emp_name = '김철수' WHERE pos_code_fk = '101' and emp_id = 1;

* 이름이 김철수인 사원의 이메일을 'busan@busan.co.kr', 이름을 '홍길동'으로 변경하시오.
UPDATE emp SET emp_email = 'busan@busan.co.kr', emp_name = '홍길동' WHERE emp_name = '김철수';

* 이메일이 'busan@busan.co.kr'이거나 비밀번호가 '1111'인 사원의 정보를 삭제하시오.
DELETE FROM emp WHERE emp_email = 'busan@busan.co.kr' OR emp_passwd = '1111';


- View : 논리적(가상) 테이블을 생성해서 보안 처리
* 생성
CREATE VIEW emp_v AS SELECT emp_email, emp_name FROM emp;
* 제거
DROP VIEW emp_v;

계정 grp

- 게시판환경설정, 게시판, (댓글)


3. Spring Boot
